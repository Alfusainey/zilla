<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.aklivity.zilla</groupId>
    <artifactId>cloud</artifactId>
    <version>develop-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>docker-image</artifactId>
  <name>zilla::cloud::docker-image</name>
  <packaging>pom</packaging>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>manager</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-echo</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-fan</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-http</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-kafka</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-proxy</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-sse</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-tcp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-tls</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>binding-ws</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>command-start</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>command-stop</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>engine</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>vault-filesystem</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>maven-notice-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>src/main/docker/*/zpmw</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <executableDependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>manager</artifactId>
          </executableDependency>
          <mainClass>io.aklivity.zilla.manager.internal.ZpmMain</mainClass>
          <arguments>
            <argument>wrap</argument>
            <argument>--launcher-directory</argument>
            <argument>${project.basedir}/src/main/docker/release</argument>
          </arguments>
        </configuration>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.39.1</version>
        <configuration>
          <filter>${*}</filter>
          <images>
            <image>
              <alias>zilla</alias>
              <name>aklivity/zilla:${project.version}</name>
              <build>
                <contextDir>release</contextDir>
                <assemblies>
                  <assembly>
                    <inline>
                      <fileSets>
                        <fileSet>
                          <directory>${user.home}/.m2/repository</directory>
                          <outputDirectory>./</outputDirectory>
                          <useDefaultExcludes>false</useDefaultExcludes>
                          <includes>
                            <include>io/aklivity/zilla/**</include>
                            <include>org/agrona/**</include>
                            <include>jakarta/json/**</include>
                            <include>jakarta/inject/**</include>
                            <include>org/leadpony/justify/**</include>
                            <include>org/eclipse/yasson/**</include>
                            <include>org/glassfish/**</include>
                            <include>com/github/rvesse/**</include>
                            <include>com/guicedee/**</include>
                            <include>org/eclipse/ee4j/**</include>
                            <include>com/ibm/icu/**</include>
                          </includes>
                          <excludes>
                            <exclude>io/aklivity/zilla/plus/**</exclude>
                          </excludes>
                        </fileSet>
                      </fileSets>
                    </inline>
                  </assembly>
                </assemblies>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>

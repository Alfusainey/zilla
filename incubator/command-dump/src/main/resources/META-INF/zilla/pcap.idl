/*
 * Copyright 2021-2022 Aklivity Inc
 *
 * Licensed under the Aklivity Community License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at
 *
 *   https://www.aklivity.io/aklivity-community-license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */
scope pcap
{
    struct TcpHeader
    {
        int16 src_port;
        int16 dst_port;
        int32 sequence_number;
        int32 acknowledgment_number;
        int16 other_fields; /* data offset, reserved, flags (4+3+9 bits) */
        int16 window;
        int16 checksum;
        int16 urgent_pointer;
    }

    struct PcapGlobalHeader
    {
        uint32 magic_number;   /* magic number */
        uint16 version_major;  /* major version number */
        uint16 version_minor;  /* minor version number */
        int32  thiszone;       /* GMT to local correction */
        uint32 sigfigs;        /* accuracy of timestamps */
        uint32 snaplen;        /* max length of captured packets, in octets */
        uint32 link_type;      /* data link type */
    }

    struct PcapPacketHeader
    {
       uint32 ts_sec;         /* timestamp seconds */
       uint32 ts_usec;        /* timestamp microseconds */
       uint32 incl_len;       /* number of octets of packet saved in file */
       uint32 orig_len;       /* actual length of packet */
    }
}
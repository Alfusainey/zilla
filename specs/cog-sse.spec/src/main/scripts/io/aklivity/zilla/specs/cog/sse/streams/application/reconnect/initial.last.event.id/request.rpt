#
# Copyright 2021-2021 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

connect "zilla://streams/app#0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"

write zilla:begin.ext ${sse:beginEx()
                             .typeId(zilla:id("sse"))
                             .pathInfo("/events/a8b7c6d5")
                             .lastEventId("104")
                             .build()}

connected

write close
read zilla:data.ext ${sse:dataEx()
                           .typeId(zilla:id("sse"))
                           .timestamp(1519937168533)
                           .id("105")
                           .type(null)
                           .build()}
read "Hello, world"

read notify RECONNECT_EVENT_STREAM
read closed

connect await RECONNECT_EVENT_STREAM
        "zilla://streams/app#0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"

write zilla:begin.ext ${sse:beginEx()
                             .typeId(zilla:id("sse"))
                             .pathInfo("/events/a8b7c6d5")
                             .lastEventId("105")
                             .build()}

connected

write close
